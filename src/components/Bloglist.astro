---
import FormattedDate from "./FormattedDate.astro";
import { Image } from "astro:assets";

import { getData } from "../services/notion.service";
const res = await getData();

const log = res.data.response;

const pageResults = [] as any[];

if (log.results) {
  for (const result of log.results) {
    // console.log(result);
    const instance = await getData((result as any).id, "page");

    const item = { ...instance.data.response, title: result.child_page.title };

    pageResults.push(item);
  }
}
---

<script define:vars={{ log, pageResults }}>
  console.log({ log });
  console.log({ pageResults });
</script>

<style>
  main {
    width: 960px;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  ul li {
    width: calc(50% - 1rem);
  }
  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }
  ul li:first-child {
    width: 100%;
    margin-bottom: 1rem;
    text-align: center;
  }
  ul li:first-child img {
    width: 100%;
  }
  ul li:first-child .title {
    font-size: 2.369rem;
  }
  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
    object-fit: cover;
  }
  ul li a {
    display: block;
  }
  .title {
    margin: 0;
    color: rgb(var(--black));
    line-height: 1;
  }
  .date {
    margin: 0;
    color: rgb(var(--gray));
  }
  ul li a:hover h4,
  ul li a:hover .date {
    color: rgb(var(--accent));
  }
  ul a:hover img {
    box-shadow: var(--box-shadow);
  }
  @media (max-width: 720px) {
    ul {
      gap: 0.5em;
    }
    ul li {
      width: 100%;
      text-align: center;
    }
    ul li:first-child {
      margin-bottom: 0;
    }
    ul li:first-child .title {
      font-size: 1.563em;
    }
  }
</style>
<section>
  <ul>
    {
      pageResults.map((result) => (
        <li>
          <a href={"/review/" + result.id}>
            {result.cover && (
              <Image
                quality="mid"
                width={720}
                height={180}
                src={result.cover.external?.url || result.cover.file.url}
                alt=""
              />
            )}

            <h4 class="title">
              {result.icon && result.icon.emoji}
              {result.title}
            </h4>
            <p class="date">
              <FormattedDate date={new Date(result.created_time)} />
            </p>
          </a>
        </li>
      ))
    }
  </ul>
</section>

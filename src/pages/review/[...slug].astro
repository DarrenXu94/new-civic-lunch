---
import { getData } from "../../services/notion.service";
import Review from "../../layouts/Review.astro";
import ReviewContent from "../../components/ReviewContent.astro";

const { slug } = Astro.params;

const pageData = await getData(slug, "page");
const res = await getData(slug);

// console.log(res.data.response);

const title = pageData.data.response.properties.title.title[0].plain_text;

const pubDate = new Date(pageData.data.response.created_time);
const updatedDate = new Date(pageData.data.response.last_edited_time);

const heroImage = pageData.data.response?.cover?.external?.url;

export async function getStaticPaths() {
  const allPaths = await getData();

  return allPaths.data.response.results.map((review) => ({
    params: { slug: review.id },
  }));
}
---

<script
  define:vars={{
    res: pageData.data.response,
    resData: res.data.response,
  }}
>
  console.log({ res });
  console.log({ resData });
  console.log(res.properties.title.title[0].plain_text);
</script>

<Review
  title={title}
  pubDate={pubDate}
  updatedDate={updatedDate}
  heroImage={heroImage}
>
  <div>
    <!-- {res.properties.title.title[0].plain_text} -->
    {
      res.data.response.results.map((result) =>
        result.paragraph && result.paragraph.rich_text.length ? (
          // <div>{result.paragraph.rich_text[0].plain_text}</div>
          <ReviewContent data={result} />
        ) : (
          ""
        )
      )
    }
  </div>
</Review>
